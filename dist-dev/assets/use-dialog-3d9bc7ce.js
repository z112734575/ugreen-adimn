import{K as e,aF as o,L as l,ar as a,aI as t,U as n,r as s,bM as u,x as c,au as r,X as d,Y as p,E as f,cT as i,cU as y,a$ as v}from"./index-ec301f65.js";import{U as m}from"./event-5568c9d8.js";import{u as C}from"./constants-4fd7b236.js";import{a as B}from"./el-overlay-b3bea032.js";const b=e({center:{type:Boolean,default:!1},alignCenter:{type:Boolean,default:!1},closeIcon:{type:o},customClass:{type:String,default:""},draggable:{type:Boolean,default:!1},fullscreen:{type:Boolean,default:!1},showClose:{type:Boolean,default:!0},title:{type:String,default:""}}),g={close:()=>!0},x=e({...b,appendToBody:{type:Boolean,default:!1},beforeClose:{type:l(Function)},destroyOnClose:{type:Boolean,default:!1},closeOnClickModal:{type:Boolean,default:!0},closeOnPressEscape:{type:Boolean,default:!0},lockScroll:{type:Boolean,default:!0},modal:{type:Boolean,default:!0},openDelay:{type:Number,default:0},closeDelay:{type:Number,default:0},top:{type:String},modelValue:{type:Boolean,default:!1},modalClass:String,width:{type:[String,Number]},zIndex:{type:Number},trapFocus:{type:Boolean,default:!1}}),D={open:()=>!0,opened:()=>!0,close:()=>!0,closed:()=>!0,[m]:e=>a(e),openAutoFocus:()=>!0,closeAutoFocus:()=>!0},F=(e,o)=>{const l=t().emit,{nextZIndex:a}=n();let b="";const g=C(),x=C(),D=s(!1),F=s(!1),I=s(!1),S=s(e.zIndex||a());let O,h;const A=u("namespace",i),k=c((()=>{const o={},l=`--${A.value}-dialog`;return e.fullscreen||(e.top&&(o[`${l}-margin-top`]=e.top),e.width&&(o[`${l}-width`]=r(e.width))),o})),w=c((()=>e.alignCenter?{display:"flex"}:{}));function j(){null==h||h(),null==O||O(),e.openDelay&&e.openDelay>0?({stop:O}=y((()=>M()),e.openDelay)):M()}function z(){null==O||O(),null==h||h(),e.closeDelay&&e.closeDelay>0?({stop:h}=y((()=>N()),e.closeDelay)):N()}function E(){e.beforeClose?e.beforeClose((function(e){e||(F.value=!0,D.value=!1)})):z()}function M(){v&&(D.value=!0)}function N(){D.value=!1}return e.lockScroll&&B(D),d((()=>e.modelValue),(t=>{t?(F.value=!1,j(),I.value=!0,S.value=e.zIndex?S.value++:a(),p((()=>{l("open"),o.value&&(o.value.scrollTop=0)}))):D.value&&z()})),d((()=>e.fullscreen),(e=>{o.value&&(e?(b=o.value.style.transform,o.value.style.transform=""):o.value.style.transform=b)})),f((()=>{e.modelValue&&(D.value=!0,I.value=!0,j())})),{afterEnter:function(){l("opened")},afterLeave:function(){l("closed"),l(m,!1),e.destroyOnClose&&(I.value=!1)},beforeLeave:function(){l("close")},handleClose:E,onModalClick:function(){e.closeOnClickModal&&E()},close:z,doClose:N,onOpenAutoFocus:function(){l("openAutoFocus")},onCloseAutoFocus:function(){l("closeAutoFocus")},onCloseRequested:function(){e.closeOnPressEscape&&E()},onFocusoutPrevented:function(e){var o;"pointer"===(null==(o=e.detail)?void 0:o.focusReason)&&e.preventDefault()},titleId:g,bodyId:x,closed:F,style:k,overlayDialogStyle:w,rendered:I,visible:D,zIndex:S}};export{g as a,x as b,D as c,b as d,F as u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
