import{q as e,x as t,X as a,r as s,a as n,bG as o,aq as r,k as i,Y as l}from"./index-ec301f65.js";import{E as c}from"./el-message-box-2d68dedb.js";import"./el-button-2b7f8e7c.js";import"./el-input-4221e35d.js";import"./el-overlay-b3bea032.js";const{t:g}=i(),u=i=>{const u=e({pageSize:10,currentPage:1,total:10,tableList:[],params:{...(null==i?void 0:i.defaultParams)||{}},loading:!0,currentRow:null}),d=t((()=>({...u.params,pageSize:u.pageSize,pageIndex:u.currentPage})));a((()=>u.currentPage),(()=>{w.getList()})),a((()=>u.pageSize),(()=>{1===u.currentPage||(u.currentPage=1),w.getList()}));const m=s(),p=s(),P=async()=>{await l();const e=n(m);return e||console.error("The table is not registered. Please use the register method to register"),e},v=async e=>{if(await((null==i?void 0:i.delListApi)&&(null==i?void 0:i.delListApi(e)))){r.success(g("common.delSuccess"));const t=(u.total%u.pageSize===e.length||1===u.pageSize)&&u.currentPage>1?u.currentPage-1:u.currentPage;u.currentPage=t,w.getList()}},w={getList:async()=>{var e;u.loading=!0;const t=await(null==i?void 0:i.getListApi(n(d)).finally((()=>{u.loading=!1})));t&&(u.tableList=o(t.data||{},null==i?void 0:i.response.list),u.total=o(t.data||{},null==(e=null==i?void 0:i.response)?void 0:e.total)||0)},setProps:async(e={})=>{const t=await P();null==t||t.setProps(e)},setColumn:async e=>{const t=await P();null==t||t.setColumn(e)},getSelections:async()=>{const e=await P();return(null==e?void 0:e.selections)||[]},setSearchParams:e=>{u.currentPage=1,u.params=Object.assign(u.params,{pageSize:u.pageSize,pageIndex:u.currentPage,...e}),w.getList()},delList:async(e,t,a=!0)=>{const s=await P();if(t){if(!(null==s?void 0:s.selections.length))return void r.warning(g("common.delNoData"))}else if(!u.currentRow)return void r.warning(g("common.delNoData"));a?c.confirm(g("common.delMessage"),g("common.delWarning"),{confirmButtonText:g("common.delOk"),cancelButtonText:g("common.delCancel"),type:"warning"}).then((async()=>{await v(e)})):await v(e)}};return(null==i?void 0:i.props)&&w.setProps(i.props),{register:(e,t)=>{m.value=e,p.value=n(t)},elTableRef:p,tableObject:u,methods:w}};export{u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
